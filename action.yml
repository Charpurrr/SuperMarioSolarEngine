name: 'Better Discord Notification'
author: 'Retr0-01'
description: 'A GitHub action for sending a better Discord notification embed, which can also be customized.'
inputs:
  webhook-url:
    description: 'The Discord webhook URL this notification will be sent to.'
    required: true
  msg-content:
    description: 'Message content for the Webhook Message.'
    required: false
  embed-color:
    description: "The embed's color."
    required: false
    default: '0'
  footer-icon:
    description: 'A small icon to put on the footer. Required in order to show the commit message count.'
    required: false
    default: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
  ignore-hidden:
    description: 'Branches that contain the phase hidden/ in them will be ignored.'
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
    - name: Process Commits
      id: process_commits
      run: |
        COMMIT_IDS="${{ join(github.event.commits.*.id, 'ƪ') }}"
        COMMIT_MESSAGES="${{ join(github.event.commits.*.message, 'ƪ') }}"
        COMMIT_LINKS="${{ join(github.event.commits.*.url, 'ƪ') }}"
        COMMIT_AUTHORS="${{ join(github.event.commits.*.author.username, 'ƪ') }}"
        COMMIT_MERGE_SHA="${{ github.event.pull_request.merge_commit_sha }}"
        
        IFS='ƪ' read -r -a COMMITS_ARRAY <<< "$COMMIT_IDS"
        IFS='ƪ' read -r -a LINKS_ARRAY <<< "$COMMIT_LINKS"
        IFS='ƪ' read -r -a AUTHORS_ARRAY <<< "$COMMIT_AUTHORS"

        SUBSTRING_COUNT=$(echo "$COMMIT_MESSAGES" | awk -v RS="ƪ" 'END {print NR-1}')

        echo "$COMMIT_IDS"
        echo "$COMMIT_MESSAGES"
        echo "$COMMIT_LINKS"
        echo "$COMMIT_AUTHORS"
        echo "$COMMIT_MERGE_SHA"
        
        # Format commit messages with hyperlinks and titles
        FORMATTED_COMMITS=""
        k=0
        for (( i=0; i<=$SUBSTRING_COUNT; i++ ))
        do
          # offset index
          j=$i
          let "j += 1"
          echo $j

          # Commit title is first line. commit description is everything else starting from line 3.
          MESSAGE="$(echo "$COMMIT_MESSAGES" | awk -v RS="ƪ" -v n=$j 'NR==n {print}')"
          COMMIT_TITLE=$(echo "$MESSAGE" | awk 'NR==1 {print}')
          COMMIT_DESCRIPTION=$(echo "$MESSAGE" | awk 'NR>=3 {print}' | paste -sd "\n")

          # Check if merge
          if [[ "$COMMIT_TITLE" == Merge* ]]; then
            TRUNCATED_ID="${COMMITS_ARRAY[$k]:0:7}"
            LINK="${LINKS_ARRAY[$k]}"
            AUTHOR="${AUTHORS_ARRAY[$k]}"
            EMOJI_STRING="<:869507189549723718:1274497726696001546>"
            let "k += 1"
          else
            TRUNCATED_ID="${COMMITS_ARRAY[$k]:0:7}"
            LINK="${LINKS_ARRAY[$k]}"
            AUTHOR="${AUTHORS_ARRAY[$k]}"
            EMOJI_STRING="<:869507190199828490:1274375974888144957>"
            let "k += 1"
          fi

          # Debug output
          echo "Commit ID: $TRUNCATED_ID"
          echo "Commit Link: $LINK"
          echo "Full Commit Message: $MESSAGE"
          echo "Commit Title: $COMMIT_TITLE"
          echo "Commit Description: $COMMIT_DESCRIPTION"

          # Format commit info
          FORMATTED_COMMITS+="-# $AUTHOR\n"
          FORMATTED_COMMITS+="$EMOJI_STRING"
          FORMATTED_COMMITS+="**[\`${TRUNCATED_ID}\`](${LINK})・${COMMIT_TITLE}**"
          FORMATTED_COMMITS+="\n"
          FORMATTED_COMMITS+="$COMMIT_DESCRIPTION"
          FORMATTED_COMMITS+="\n\n"
        done

        COMMITS_COUNT=0
        let "COMMITS_COUNT = SUBSTRING_COUNT+1"

        if [ "$COMMITS_COUNT" -eq 0 ] || [[ "$github.ref_name" =~ hidden/ && "$inputs.ignore-hidden" == true ]]; then
          SHOULD_CONTINUE='false'
        else
          SHOULD_CONTINUE='true'
        fi

        echo "COMMIT_MESSAGE=$FORMATTED_COMMITS" | sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' >> $GITHUB_OUTPUT
        echo "COMMITS_COUNT=$COMMITS_COUNT" >> $GITHUB_OUTPUT
        echo "SHOULD_CONTINUE=$SHOULD_CONTINUE" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get Current Time
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: josStorer/get-current-time@master
      id: get_time

    - name: Get User Avatar
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: fjogeleit/http-request-action@master
      id: get_avatar
      with:
        url: "https://api.github.com/users/${{ github.actor }}"
        method: "GET"

    - name: Send Notification
      if: steps.process_commits.outputs.SHOULD_CONTINUE == 'true'
      uses: fjogeleit/http-request-action@master
      with:
        url: ${{ inputs.webhook-url }}
        method: 'POST'
        data: |
          {
            "content": "${{inputs.msg-content}}",
            "embeds": [
              {
                "title": "${{github.repository}} [${{github.ref_name}}]",
                "description": "${{steps.process_commits.outputs.COMMIT_MESSAGE}}",
                "url": "${{github.event.compare}}",
                "color": ${{inputs.embed-color}},
                "author": {
                  "name": "${{github.actor}}",
                  "icon_url": "${{fromJson(steps.get_avatar.outputs.response).avatar_url}}"
                },
                "footer": {
                  "text": "${{steps.process_commits.outputs.COMMITS_COUNT}} new commit(s)",
                  "icon_url": "${{inputs.footer-icon}}"
                },
                "timestamp": "${{steps.get_time.outputs.time}}"
              }
            ]
          }
branding:
  icon: 'bell'
  color: 'blue'
